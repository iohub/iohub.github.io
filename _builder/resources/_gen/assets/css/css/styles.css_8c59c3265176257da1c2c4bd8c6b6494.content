/*
! tailwindcss v3.4.0 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
  -webkit-tap-highlight-color: transparent; /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-feature-settings: normal; /* 2 */
  font-variation-settings: normal; /* 3 */
  font-size: 1em; /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.format {
  color: #374151;
  max-width: 65ch;
}
.format :where([class~="lead"]):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.format :where(a):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-links);
  text-decoration: underline;
  font-weight: 500;
}
.format :where(a):not(:where([class~="not-format"] *)):hover {
  text-decoration: none;
}
.format :where(strong):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-bold);
  font-weight: 700;
}
.format :where(a strong):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(blockquote strong):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(thead th strong):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(ol):not(:where([class~="not-format"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.format :where(ol[type="A"]):not(:where([class~="not-format"] *)) {
  list-style-type: upper-alpha;
}
.format :where(ol[type="a"]):not(:where([class~="not-format"] *)) {
  list-style-type: lower-alpha;
}
.format :where(ol[type="A" s]):not(:where([class~="not-format"] *)) {
  list-style-type: upper-alpha;
}
.format :where(ol[type="a" s]):not(:where([class~="not-format"] *)) {
  list-style-type: lower-alpha;
}
.format :where(ol[type="I"]):not(:where([class~="not-format"] *)) {
  list-style-type: upper-roman;
}
.format :where(ol[type="i"]):not(:where([class~="not-format"] *)) {
  list-style-type: lower-roman;
}
.format :where(ol[type="I" s]):not(:where([class~="not-format"] *)) {
  list-style-type: upper-roman;
}
.format :where(ol[type="i" s]):not(:where([class~="not-format"] *)) {
  list-style-type: lower-roman;
}
.format :where(ol[type="1"]):not(:where([class~="not-format"] *)) {
  list-style-type: decimal;
}
.format :where(ul):not(:where([class~="not-format"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}
.format :where(ol > li):not(:where([class~="not-format"] *))::marker {
  font-weight: 400;
  color: var(--tw-format-counters);
}
.format :where(ul > li):not(:where([class~="not-format"] *))::marker {
  color: var(--tw-format-bullets);
}
.format :where(hr):not(:where([class~="not-format"] *)) {
  border-color: var(--tw-format-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.format :where(blockquote):not(:where([class~="not-format"] *)) {
  font-size: 1.1111111em;
  font-weight: 700;
  font-style: italic;
  color: var(--tw-format-quotes);
  quotes: "\201C""\201D""\2018""\2019";
  margin-bottom: 1.6em;
}
.format :where(blockquote):not(:where([class~="not-format"] *))::before {
  content: "";
  background-image: url("data:image/svg+xml,%0A%3Csvg width='32' height='24' viewBox='0 0 32 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M18.6893 24V14.1453C18.6893 6.54 23.664 1.38533 30.6667 -7.15256e-07L31.9933 2.868C28.7507 4.09066 26.6667 7.71867 26.6667 10.6667H32V24H18.6893ZM-9.53674e-07 24V14.1453C-9.53674e-07 6.54 4.99733 1.384 12 -7.15256e-07L13.328 2.868C10.084 4.09066 8 7.71867 8 10.6667L13.3107 10.6667V24H-9.53674e-07Z' fill='%239CA3AF'/%3E%3C/svg%3E%0A");
  background-repeat: no-repeat;
  color: var(--tw-format-quotes);
  width: 1.7777778em;
  height: 1.3333333em;
  display: block;
  margin-top: 1.6em;
}
.format :where(blockquote p:first-of-type):not(:where([class~="not-format"] *))::before {
  content: open-quote;
}
.format :where(blockquote p:last-of-type):not(:where([class~="not-format"] *))::after {
  content: close-quote;
}
.format :where(h1):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.format :where(h1 strong):not(:where([class~="not-format"] *)) {
  font-weight: 900;
  color: inherit;
}
.format :where(h2):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 0;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.format :where(h2 strong):not(:where([class~="not-format"] *)) {
  font-weight: 800;
  color: inherit;
}
.format :where(h3):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 700;
  font-size: 1.25em;
  margin-top: 0;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.format :where(h3 strong):not(:where([class~="not-format"] *)) {
  font-weight: 800;
  color: inherit;
}
.format :where(h4):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 600;
  margin-top: 0;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.format :where(h4 strong):not(:where([class~="not-format"] *)) {
  font-weight: 700;
  color: inherit;
}
.format :where(img):not(:where([class~="not-format"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.format :where(figure > *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.format :where(figcaption):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.format :where(code):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-code);
  font-weight: 600;
  background-color: var(--tw-format-code-bg);
  padding-top: 0.3333333em;
  padding-bottom: 0.3333333em;
  padding-left: 0.5555556em;
  padding-right: 0.5555556em;
  border-radius: 0.2222222em;
  font-size: 0.875em;
}
.format :where(a code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(h1 code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(h2 code):not(:where([class~="not-format"] *)) {
  color: inherit;
  font-size: 0.875em;
}
.format :where(h3 code):not(:where([class~="not-format"] *)) {
  color: inherit;
  font-size: 0.9em;
}
.format :where(h4 code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(blockquote code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(thead th code):not(:where([class~="not-format"] *)) {
  color: inherit;
}
.format :where(pre):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-pre-code);
  background-color: var(--tw-format-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}
.format :where(pre code):not(:where([class~="not-format"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.format :where(pre code):not(:where([class~="not-format"] *))::before {
  content: none;
}
.format :where(pre code):not(:where([class~="not-format"] *))::after {
  content: none;
}
.format :where(table):not(:where([class~="not-format"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.format :where(thead):not(:where([class~="not-format"] *)) {
  background-color: var(--tw-format-th-bg);
  border-radius: 0.2777778em;
}
.format :where(thead th):not(:where([class~="not-format"] *)) {
  color: var(--tw-format-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding: 0.5555556em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.format :where(tbody tr):not(:where([class~="not-format"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-format-td-borders);
}
.format :where(tbody tr:last-child):not(:where([class~="not-format"] *)) {
  border-bottom-width: 0;
}
.format :where(tbody td):not(:where([class~="not-format"] *)) {
  vertical-align: baseline;
}
.format :where(tfoot):not(:where([class~="not-format"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-format-th-borders);
}
.format :where(tfoot td):not(:where([class~="not-format"] *)) {
  vertical-align: top;
}
.format {
  --tw-format-body: #6b7280;
  --tw-format-headings: #111827;
  --tw-format-lead: #6b7280;
  --tw-format-links: #4b5563;
  --tw-format-bold: #111827;
  --tw-format-counters: #6b7280;
  --tw-format-bullets: #6b7280;
  --tw-format-hr: #e5e7eb;
  --tw-format-quotes: #111827;
  --tw-format-quote-borders: #e5e7eb;
  --tw-format-captions: #6b7280;
  --tw-format-code: #111827;
  --tw-format-code-bg: #f3f4f6;
  --tw-format-pre-code: #4b5563;
  --tw-format-pre-bg: #f3f4f6;
  --tw-format-th-borders: #e5e7eb;
  --tw-format-th-bg: #f9fafb;
  --tw-format-td-borders: #e5e7eb;
  --tw-format-invert-body: #9ca3af;
  --tw-format-invert-headings: #fff;
  --tw-format-invert-lead: #9ca3af;
  --tw-format-invert-links: #fff;
  --tw-format-invert-bold: #fff;
  --tw-format-invert-counters: #9ca3af;
  --tw-format-invert-bullets: #4b5563;
  --tw-format-invert-hr: #374151;
  --tw-format-invert-quotes: #f3f4f6;
  --tw-format-invert-quote-borders: #374151;
  --tw-format-invert-captions: #9ca3af;
  --tw-format-invert-code: #fff;
  --tw-format-invert-code-bg: #1f2937;
  --tw-format-invert-pre-code: #d1d5db;
  --tw-format-invert-pre-bg: #374151;
  --tw-format-invert-th-borders: #4b5563;
  --tw-format-invert-td-borders: #374151;
  --tw-format-invert-th-bg: #374151;
  font-size: 1rem;
  line-height: 1.75;
}
.format :where(p):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.format :where(blockquote > p:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(video):not(:where([class~="not-format"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.format :where(figure):not(:where([class~="not-format"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.format :where(li):not(:where([class~="not-format"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.format :where(ol > li):not(:where([class~="not-format"] *)) {
  padding-left: 0.375em;
}
.format :where(ul > li):not(:where([class~="not-format"] *)) {
  padding-left: 0.375em;
}
.format :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.format :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
}
.format :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.25em;
}
.format :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
}
.format :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.25em;
}
.format :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-format"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.format :where(hr + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(h2 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(h3 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(h4 + *):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(thead th:last-child):not(:where([class~="not-format"] *)) {
  padding-right: 0;
}
.format :where(tbody td, tfoot td):not(:where([class~="not-format"] *)) {
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.format :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-format"] *)) {
  padding-right: 0;
}
.format :where(.format > :first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format :where(.format > :last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 0;
}
.format-sm :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.format-sm :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1em;
}
.format-sm :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1em;
}
.format-sm :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1em;
}
.format-sm :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1em;
}
.format-sm :where(.format > :first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-sm :where(.format > :last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 0;
}
.format-base :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.format-base :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
}
.format-base :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.25em;
}
.format-base :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.25em;
}
.format-base :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.25em;
}
.format-base :where(.format > :first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-base :where(.format > :last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 0;
}
.format-lg :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}
.format-lg :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.3333333em;
}
.format-lg :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.3333333em;
}
.format-lg :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
  margin-top: 1.3333333em;
}
.format-lg :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 1.3333333em;
}
.format-lg :where(.format > :first-child):not(:where([class~="not-format"] *)) {
  margin-top: 0;
}
.format-lg :where(.format > :last-child):not(:where([class~="not-format"] *)) {
  margin-bottom: 0;
}
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}
.invisible {
  visibility: hidden;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.sticky {
  position: sticky;
}
.inset-0 {
  inset: 0px;
}
.bottom-0 {
  bottom: 0px;
}
.bottom-24 {
  bottom: 6rem;
}
.end-2 {
  inset-inline-end: 0.5rem;
}
.end-2\.5 {
  inset-inline-end: 0.625rem;
}
.end-8 {
  inset-inline-end: 2rem;
}
.left-0 {
  left: 0px;
}
.start-0 {
  inset-inline-start: 0px;
}
.top-0 {
  top: 0px;
}
.top-2 {
  top: 0.5rem;
}
.top-2\.5 {
  top: 0.625rem;
}
.top-\[-88px\] {
  top: -88px;
}
.z-10 {
  z-index: 10;
}
.z-20 {
  z-index: 20;
}
.z-30 {
  z-index: 30;
}
.z-40 {
  z-index: 40;
}
.z-50 {
  z-index: 50;
}
.-mx-5 {
  margin-left: -1.25rem;
  margin-right: -1.25rem;
}
.mx-1 {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}
.mx-3 {
  margin-left: 0.75rem;
  margin-right: 0.75rem;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.my-0 {
  margin-top: 0px;
  margin-bottom: 0px;
}
.my-0\.5 {
  margin-top: 0.125rem;
  margin-bottom: 0.125rem;
}
.my-1 {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.my-12 {
  margin-top: 3rem;
  margin-bottom: 3rem;
}
.my-20 {
  margin-top: 5rem;
  margin-bottom: 5rem;
}
.my-3 {
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
}
.my-5 {
  margin-top: 1.25rem;
  margin-bottom: 1.25rem;
}
.my-6 {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}
.mb-1 {
  margin-bottom: 0.25rem;
}
.mb-4 {
  margin-bottom: 1rem;
}
.ms-2 {
  margin-inline-start: 0.5rem;
}
.ms-2\.5 {
  margin-inline-start: 0.625rem;
}
.ms-3 {
  margin-inline-start: 0.75rem;
}
.mt-2 {
  margin-top: 0.5rem;
}
.mt-22 {
  margin-top: 5.5rem;
}
.mt-3 {
  margin-top: 0.75rem;
}
.mt-4 {
  margin-top: 1rem;
}
.mt-6 {
  margin-top: 1.5rem;
}
.line-clamp-3 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}
.line-clamp-5 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 5;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}
.hidden {
  display: none;
}
.h-10 {
  height: 2.5rem;
}
.h-14 {
  height: 3.5rem;
}
.h-2 {
  height: 0.5rem;
}
.h-2\.5 {
  height: 0.625rem;
}
.h-3 {
  height: 0.75rem;
}
.h-4 {
  height: 1rem;
}
.h-5 {
  height: 1.25rem;
}
.h-5\/6 {
  height: 83.333333%;
}
.h-60 {
  height: 15rem;
}
.h-8 {
  height: 2rem;
}
.h-\[30rem\] {
  height: 30rem;
}
.h-\[52px\] {
  height: 52px;
}
.h-\[56px\] {
  height: 56px;
}
.h-dvh {
  height: 100dvh;
}
.h-full {
  height: 100%;
}
.h-screen {
  height: 100vh;
}
.max-h-screen {
  max-height: 100vh;
}
.w-1\/2 {
  width: 50%;
}
.w-10 {
  width: 2.5rem;
}
.w-11\/12 {
  width: 91.666667%;
}
.w-14 {
  width: 3.5rem;
}
.w-2 {
  width: 0.5rem;
}
.w-2\.5 {
  width: 0.625rem;
}
.w-3 {
  width: 0.75rem;
}
.w-4 {
  width: 1rem;
}
.w-44 {
  width: 11rem;
}
.w-5 {
  width: 1.25rem;
}
.w-52 {
  width: 13rem;
}
.w-64 {
  width: 16rem;
}
.w-8 {
  width: 2rem;
}
.w-\[120px\] {
  width: 120px;
}
.w-\[1280px\] {
  width: 1280px;
}
.w-\[52px\] {
  width: 52px;
}
.w-auto {
  width: auto;
}
.w-full {
  width: 100%;
}
.max-w-none {
  max-width: none;
}
.max-w-screen-xl {
  max-width: 1280px;
}
.flex-1 {
  flex: 1 1 0%;
}
.shrink-0 {
  flex-shrink: 0;
}
.grow {
  flex-grow: 1;
}
.-translate-x-full {
  --tw-translate-x: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}
@keyframes spin {

  to {
    transform: rotate(360deg);
  }
}
.animate-spin {
  animation: spin 1s linear infinite;
}
.cursor-zoom-out {
  cursor: zoom-out;
}
.flex-row {
  flex-direction: row;
}
.flex-col {
  flex-direction: column;
}
.flex-col-reverse {
  flex-direction: column-reverse;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.justify-start {
  justify-content: flex-start;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.justify-around {
  justify-content: space-around;
}
.gap-12 {
  gap: 3rem;
}
.gap-2 {
  gap: 0.5rem;
}
.gap-y-3 {
  row-gap: 0.75rem;
}
.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.25rem * var(--tw-space-x-reverse));
  margin-left: calc(1.25rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-x-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2rem * var(--tw-space-x-reverse));
  margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}
.space-y-16 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(4rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(4rem * var(--tw-space-y-reverse));
}
.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}
.space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}
.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}
.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}
.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}
.divide-gray-100 > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgb(243 244 246 / var(--tw-divide-opacity));
}
.place-self-center {
  place-self: center;
}
.overflow-auto {
  overflow: auto;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-y-auto {
  overflow-y: auto;
}
.scroll-smooth {
  scroll-behavior: smooth;
}
.whitespace-nowrap {
  white-space: nowrap;
}
.whitespace-pre-wrap {
  white-space: pre-wrap;
}
.text-pretty {
  text-wrap: pretty;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-lg {
  border-radius: 0.5rem;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded-b-lg {
  border-bottom-right-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}
.rounded-t-lg {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}
.border {
  border-width: 1px;
}
.border-b {
  border-bottom-width: 1px;
}
.border-b-2 {
  border-bottom-width: 2px;
}
.border-t {
  border-top-width: 1px;
}
.border-gray-100 {
  --tw-border-opacity: 1;
  border-color: rgb(243 244 246 / var(--tw-border-opacity));
}
.border-gray-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}
.border-gray-300 {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}
.bg-black\/90 {
  background-color: rgb(0 0 0 / 0.9);
}
.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity));
}
.bg-blue-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity));
}
.bg-blue-700 {
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity));
}
.bg-gray-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}
.bg-gray-900 {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}
.bg-gray-900\/90 {
  background-color: rgb(17 24 39 / 0.9);
}
.bg-green-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity));
}
.bg-transparent {
  background-color: transparent;
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.bg-white\/85 {
  background-color: rgb(255 255 255 / 0.85);
}
.bg-white\/90 {
  background-color: rgb(255 255 255 / 0.9);
}
.bg-contain {
  background-size: contain;
}
.bg-center {
  background-position: center;
}
.bg-no-repeat {
  background-repeat: no-repeat;
}
.object-cover {
  object-fit: cover;
}
.object-center {
  object-position: center;
}
.p-2 {
  padding: 0.5rem;
}
.p-2\.5 {
  padding: 0.625rem;
}
.p-3 {
  padding: 0.75rem;
}
.p-4 {
  padding: 1rem;
}
.p-5 {
  padding: 1.25rem;
}
.p-6 {
  padding: 1.5rem;
}
.px-0 {
  padding-left: 0px;
  padding-right: 0px;
}
.px-0\.5 {
  padding-left: 0.125rem;
  padding-right: 0.125rem;
}
.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.px-1\.5 {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}
.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}
.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}
.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}
.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}
.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}
.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.pb-5 {
  padding-bottom: 1.25rem;
}
.pl-6 {
  padding-left: 1.5rem;
}
.pt-1 {
  padding-top: 0.25rem;
}
.pt-6 {
  padding-top: 1.5rem;
}
.pt-\[88px\] {
  padding-top: 88px;
}
.text-center {
  text-align: center;
}
.font-Montserrat {
  font-family: Montserrat;
}
.font-Oswald {
  font-family: Oswald;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.text-7xl {
  font-size: 4.5rem;
  line-height: 1;
}
.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}
.font-bold {
  font-weight: 700;
}
.font-extrabold {
  font-weight: 800;
}
.font-light {
  font-weight: 300;
}
.font-medium {
  font-weight: 500;
}
.font-normal {
  font-weight: 400;
}
.font-semibold {
  font-weight: 600;
}
.font-thin {
  font-weight: 100;
}
.uppercase {
  text-transform: uppercase;
}
.leading-7 {
  line-height: 1.75rem;
}
.tracking-wide {
  letter-spacing: 0.025em;
}
.tracking-wider {
  letter-spacing: 0.05em;
}
.text-black {
  --tw-text-opacity: 1;
  color: rgb(0 0 0 / var(--tw-text-opacity));
}
.text-blue-600 {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity));
}
.text-blue-800 {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity));
}
.text-gray-100 {
  --tw-text-opacity: 1;
  color: rgb(243 244 246 / var(--tw-text-opacity));
}
.text-gray-300 {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}
.text-gray-400 {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}
.text-gray-500 {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}
.text-gray-500\/90 {
  color: rgb(107 114 128 / 0.9);
}
.text-gray-600 {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}
.text-gray-700 {
  --tw-text-opacity: 1;
  color: rgb(55 65 81 / var(--tw-text-opacity));
}
.text-gray-800 {
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}
.text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}
.text-gray-900\/90 {
  color: rgb(17 24 39 / 0.9);
}
.text-neutral-700 {
  --tw-text-opacity: 1;
  color: rgb(64 64 64 / var(--tw-text-opacity));
}
.text-red-500 {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}
.text-red-700 {
  --tw-text-opacity: 1;
  color: rgb(185 28 28 / var(--tw-text-opacity));
}
.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.no-underline {
  text-decoration-line: none;
}
.opacity-0 {
  opacity: 0;
}
.opacity-100 {
  opacity: 1;
}
.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-\[0_2px_15px_-3px_rgba\(0\2c 0\2c 0\2c 0\.07\)\2c 0_10px_20px_-2px_rgba\(0\2c 0\2c 0\2c 0\.04\)\] {
  --tw-shadow: 0 2px 15px -3px rgba(0,0,0,0.07),0 10px 20px -2px rgba(0,0,0,0.04);
  --tw-shadow-colored: 0 2px 15px -3px var(--tw-shadow-color), 0 10px 20px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-sm {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.backdrop-blur-lg {
  --tw-backdrop-blur: blur(16px);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.backdrop-blur-md {
  --tw-backdrop-blur: blur(12px);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-transform {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.duration-150 {
  transition-duration: 150ms;
}
.duration-300 {
  transition-duration: 300ms;
}
.duration-75 {
  transition-duration: 75ms;
}

/* social icon */
.ficon:hover {
  /* filter: invert(64%) sepia(91%) saturate(7473%) hue-rotate(221deg) brightness(84%) contrast(103%); */
  filter: invert(47%) sepia(69%) saturate(6446%) hue-rotate(217deg)
    brightness(81%) contrast(113%);
}

/* HAMBURGER MENU */
.open .hamburger-top {
  transform: rotate(45deg) translateY(4px) translateX(4px);
  background-color: #fff;
}

.open .hamburger-middle {
  display: none;
}

.open .hamburger-bottom {
  transform: rotate(-45deg) translateY(-4px) translateX(4px);
  background-color: #fff;
}

.theme-aside {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.theme-aside:hover {
  border-radius: 0.5rem;
  border-width: 0px;
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity));
}

.theme-toc {
  margin-top: 0.125rem;
  margin-bottom: 0.125rem;
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  border-radius: 0.5rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 0.75rem;
  line-height: 1rem;
  --tw-text-opacity: 1;
  color: rgb(31 41 55 / var(--tw-text-opacity));
}

.theme-toc:hover {
  border-radius: 0.5rem;
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity));
}

:is(:where(.dark) .theme-toc) {
  --tw-border-opacity: 1;
  border-color: rgb(31 41 55 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

:is(:where(.dark) .theme-toc:hover) {
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity));
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.theme-toc-active {
  margin-top: 0.125rem;
  margin-bottom: 0.125rem;
  display: block;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  border-radius: 0.5rem;
  border-width: 1px;
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 0.75rem;
  line-height: 1rem;
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity));
}

:is(:where(.dark) .theme-toc-active) {
  --tw-border-opacity: 1;
  border-color: rgb(107 114 128 / var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

:is(:where(.dark) .theme-toc-active:hover) {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

.theme-toc-nest-1 {
  padding-left: 0.75rem;
}

.theme-toc-nest-2 {
  padding-left: 1rem;
}

.theme-toc-nest-3 {
  padding-left: 1.25rem;
}

.theme-toc-nest-1::before,
.theme-toc-nest-2::before,
.theme-toc-nest-3::before {
  content: "- ";
}

/* Image zoom */
@keyframes zoomIn {

  from {
    transform: scale(0);
    opacity: 0;
  }

  to {
    transform: scale(1);
    opacity: 1;
  }
}
.zoomIn {
  animation: zoomIn .8s ease-out 1;
}

@keyframes zoomOut {

  from {
    transform: scale(1);
    opacity: 1;
  }

  to {
    transform: scale(0);
    opacity: 0;
  }
}

.zoomOut {
  animation: zoomOut 1s ease-in-out 1;
}

/* Scrollbar */
/* 整个滚动条，可以设置任意的尺寸大小，包括 0，也就是滚动条不可见 */
*::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

/* 可拖拽的那个滑杆 */
*::-webkit-scrollbar-thumb {
  background: rgba(60, 60, 67, 0.4);
  border-radius: 8px;
  cursor: pointer;
}

*::-webkit-scrollbar-thumb:hover {
  background: #425aef;
  opacity: 1;
  display: block !important;
}

/* 滚动条的轨道 */
*::-webkit-scrollbar-track {
  background-color: #00000000;
}

/* Fix jumping scrollbar issue */
/* :root {
  scrollbar-gutter: stable;
} */

html {
  overflow-y: scroll;
}

:root {
  overflow-y: auto;
  overflow-x: hidden;

  /* waline */
  --waline-bgcolor-light: #ffff;
}

:root body {
  position: absolute;
}

body {
  width: 100vw;
}

@font-face {
  font-family: "Oswald";
  src: url("/font/Oswald-VariableFont_wght.woff2");
  font-display: swap;
}

@font-face {
  font-family: "Montserrat";
  src: url("/font/Montserrat-VariableFont_wght.woff2");
  font-display: swap;
}

/* Sweep To Right */
.hvr-sweep-to-right {
  /* display: inline-block; */
  /* vertical-align: middle; */
  -webkit-transform: perspective(1px) translateZ(0);
  transform: perspective(1px) translateZ(0);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0);
  position: relative;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.7s;
  transition-duration: 0.7s;
}
.hvr-sweep-to-right:before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #0b9b8a;
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: 0 50%;
  transform-origin: 0 50%;
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.7s;
  transition-duration: 0.7s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.hvr-sweep-to-right:hover,
.hvr-sweep-to-right:focus,
.hvr-sweep-to-right:active {
  color: white;
}
.hvr-sweep-to-right:hover:before,
.hvr-sweep-to-right:focus:before,
.hvr-sweep-to-right:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}

/* 导航栏高度滚动 */
.navbar-init {
  -webkit-transition: height 0.5s;
  transition: height 0.5s;
  -webkit-transition: all 0.5s ease;
}

.navbar-scroll {
  height: 88px !important;
}

/* waline */
.wl-editor {
  transition-property: none;
}

.wl-input {
  transition-property: none;
}

.wl-panel > textarea {
  border-color: transparent;
  --tw-ring-color: transparent;
}

/* Code copy button */
div.highlight,
pre {
  position: relative;
}

.copy-code {
  position: absolute;
  right: 0.25rem;
  top: 0.25rem;
  display: none;
  user-select: none;
  border-radius: 0.5rem;
  background-color: rgb(156 163 175 / 0.8);
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
  font-size: 0.75rem;
  line-height: 1rem;
  color: rgb(255 255 255 / 0.95);
  --tw-backdrop-blur: blur(4px);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 500ms;
}

.copy-code:hover {
  color: rgb(255 255 255 / 0.6);
}

:is(:where(.dark) .copy-code) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

:is(:where(.dark) .copy-code:hover) {
  color: rgb(255 255 255 / 0.7);
}

div.highlight:hover .copy-code,
pre:hover .copy-code {
  display: block;
}

/* Twikoo comment */
.twikoo {
  width: 100%;
  padding-left: 0.125rem;
  padding-right: 0.125rem;
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}
@media (min-width: 768px) {

  .twikoo {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }
}
@media (min-width: 1024px) {

  .twikoo {
    max-width: 64rem;
    padding-left: 2rem;
    padding-right: 2rem;
  }
}
:is(:where(.dark) .twikoo) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

.tk-submit .tk-row .tk-avatar {
  display: none;
}

.tk-row.actions {
  margin-left: 0px !important;
  margin-right: 0px !important;
}

.tk-input.el-textarea > textarea {
  height: 7rem !important;
  min-height: 7rem !important;
}

.tk-expand {
  border-radius: 0.5rem;
}

:is(:where(.dark) .tk-expand:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}

.goods-item-hidden {
  opacity: 0;
  transform: translateY(6%);
  transition:
    opacity 0.4s ease,
    transform 0.8s ease;
}

.slide-top {
  opacity: 1;
  transform: translateY(0);
}

/* 下面的fixed、inset-0、z-30、bg-gray-900及dark:bg-gray-900是flowbite.css移除后兼容drawer的阴影效果 */
.fixed {
  position: fixed;
}

.inset-0 {
  inset: 0px;
}

.z-30 {
  z-index: 30;
}

.bg-gray-900\/50 {
  background-color: rgb(17 24 39 / 0.5);
}

:is(:where(.dark) .dark\:bg-gray-900\/80) {
  background-color: rgb(17 24 39 / 0.8);
}

@media (min-width: 768px) {

  .md\:format-base {
    font-size: 1rem;
    line-height: 1.75;
  }

  .md\:format-base :where(p):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .md\:format-base :where([class~="lead"]):not(:where([class~="not-format"] *)) {
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .md\:format-base :where(blockquote):not(:where([class~="not-format"] *)) {
    margin-bottom: 1.6em;
  }

  .md\:format-base :where(blockquote):not(:where([class~="not-format"] *))::before {
    margin-top: 1.6em;
  }

  .md\:format-base :where(blockquote > p:first-child):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .md\:format-base :where(h1):not(:where([class~="not-format"] *)) {
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .md\:format-base :where(h2):not(:where([class~="not-format"] *)) {
    font-size: 1.5em;
    margin-top: 0;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }

  .md\:format-base :where(h3):not(:where([class~="not-format"] *)) {
    font-size: 1.25em;
    margin-top: 0;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .md\:format-base :where(h4):not(:where([class~="not-format"] *)) {
    margin-top: 0;
    margin-bottom: 0.5em;
    line-height: 1.5;
  }

  .md\:format-base :where(img):not(:where([class~="not-format"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .md\:format-base :where(video):not(:where([class~="not-format"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .md\:format-base :where(figure):not(:where([class~="not-format"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .md\:format-base :where(figure > *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .md\:format-base :where(figcaption):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }

  .md\:format-base :where(code):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
  }

  .md\:format-base :where(h2 code):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
  }

  .md\:format-base :where(h3 code):not(:where([class~="not-format"] *)) {
    font-size: 0.9em;
  }

  .md\:format-base :where(pre):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-right: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-left: 1.1428571em;
  }

  .md\:format-base :where(ol):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }

  .md\:format-base :where(ul):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-left: 1.625em;
  }

  .md\:format-base :where(li):not(:where([class~="not-format"] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .md\:format-base :where(ol > li):not(:where([class~="not-format"] *)) {
    padding-left: 0.375em;
  }

  .md\:format-base :where(ul > li):not(:where([class~="not-format"] *)) {
    padding-left: 0.375em;
  }

  .md\:format-base :where(.format > ul > li p):not(:where([class~="not-format"] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .md\:format-base :where(.format > ul > li > *:first-child):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
  }

  .md\:format-base :where(.format > ul > li > *:last-child):not(:where([class~="not-format"] *)) {
    margin-bottom: 1.25em;
  }

  .md\:format-base :where(.format > ol > li > *:first-child):not(:where([class~="not-format"] *)) {
    margin-top: 1.25em;
  }

  .md\:format-base :where(.format > ol > li > *:last-child):not(:where([class~="not-format"] *)) {
    margin-bottom: 1.25em;
  }

  .md\:format-base :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-format"] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .md\:format-base :where(hr):not(:where([class~="not-format"] *)) {
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .md\:format-base :where(hr + *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .md\:format-base :where(h2 + *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .md\:format-base :where(h3 + *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .md\:format-base :where(h4 + *):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .md\:format-base :where(table):not(:where([class~="not-format"] *)) {
    font-size: 0.875em;
    line-height: 1.7142857;
  }

  .md\:format-base :where(thead th):not(:where([class~="not-format"] *)) {
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .md\:format-base :where(thead th:last-child):not(:where([class~="not-format"] *)) {
    padding-right: 0;
  }

  .md\:format-base :where(tbody td, tfoot td):not(:where([class~="not-format"] *)) {
    padding-top: 0.5714286em;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .md\:format-base :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-format"] *)) {
    padding-right: 0;
  }

  .md\:format-base :where(.format > :first-child):not(:where([class~="not-format"] *)) {
    margin-top: 0;
  }

  .md\:format-base :where(.format > :last-child):not(:where([class~="not-format"] *)) {
    margin-bottom: 0;
  }
}

:is(:where(.dark) .dark\:format-invert) {
  --tw-format-body: var(--tw-format-invert-body);
  --tw-format-headings: var(--tw-format-invert-headings);
  --tw-format-lead: var(--tw-format-invert-lead);
  --tw-format-links: var(--tw-format-invert-links);
  --tw-format-bold: var(--tw-format-invert-bold);
  --tw-format-counters: var(--tw-format-invert-counters);
  --tw-format-bullets: var(--tw-format-invert-bullets);
  --tw-format-hr: var(--tw-format-invert-hr);
  --tw-format-quotes: var(--tw-format-invert-quotes);
  --tw-format-quote-borders: var(--tw-format-invert-quote-borders);
  --tw-format-captions: var(--tw-format-invert-captions);
  --tw-format-code: var(--tw-format-invert-code);
  --tw-format-code-bg: var(--tw-format-invert-code-bg);
  --tw-format-pre-code: var(--tw-format-invert-pre-code);
  --tw-format-pre-bg: var(--tw-format-invert-pre-bg);
  --tw-format-th-borders: var(--tw-format-invert-th-borders);
  --tw-format-td-borders: var(--tw-format-invert-td-borders);
  --tw-format-th-bg: var(--tw-format-invert-th-bg);
}

.before\:absolute::before {
  content: var(--tw-content);
  position: absolute;
}

.before\:left-0::before {
  content: var(--tw-content);
  left: 0px;
}

.before\:left-6::before {
  content: var(--tw-content);
  left: 1.5rem;
}

.before\:top-0::before {
  content: var(--tw-content);
  top: 0px;
}

.before\:top-2::before {
  content: var(--tw-content);
  top: 0.5rem;
}

.before\:z-10::before {
  content: var(--tw-content);
  z-index: 10;
}

.before\:h-2::before {
  content: var(--tw-content);
  height: 0.5rem;
}

.before\:h-full::before {
  content: var(--tw-content);
  height: 100%;
}

.before\:w-2::before {
  content: var(--tw-content);
  width: 0.5rem;
}

.before\:-translate-x-1\/2::before {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.before\:rounded-full::before {
  content: var(--tw-content);
  border-radius: 9999px;
}

.before\:border::before {
  content: var(--tw-content);
  border-width: 1px;
}

.before\:border-dashed::before {
  content: var(--tw-content);
  border-style: dashed;
}

.before\:border-slate-200::before {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(226 232 240 / var(--tw-border-opacity));
}

.before\:bg-emerald-500::before {
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(16 185 129 / var(--tw-bg-opacity));
}

.before\:ring-2::before {
  content: var(--tw-content);
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.before\:ring-white::before {
  content: var(--tw-content);
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.after\:absolute::after {
  content: var(--tw-content);
  position: absolute;
}

.after\:bottom-6::after {
  content: var(--tw-content);
  bottom: 1.5rem;
}

.after\:left-6::after {
  content: var(--tw-content);
  left: 1.5rem;
}

.after\:top-6::after {
  content: var(--tw-content);
  top: 1.5rem;
}

.after\:-translate-x-1\/2::after {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.after\:border::after {
  content: var(--tw-content);
  border-width: 1px;
}

.after\:border-slate-200::after {
  content: var(--tw-content);
  --tw-border-opacity: 1;
  border-color: rgb(226 232 240 / var(--tw-border-opacity));
}

.after\:content-\[\'_\2197\'\]::after {
  --tw-content: ' ↗';
  content: var(--tw-content);
}

.hover\:rounded-lg:hover {
  border-radius: 0.5rem;
}

.hover\:border-gray-300:hover {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

.hover\:bg-blue-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity));
}

.hover\:bg-blue-800:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(30 64 175 / var(--tw-bg-opacity));
}

.hover\:bg-gray-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

.hover\:bg-gray-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

.hover\:bg-gray-50:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

.hover\:text-blue-600:hover {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity));
}

.hover\:text-blue-700:hover {
  --tw-text-opacity: 1;
  color: rgb(29 78 216 / var(--tw-text-opacity));
}

.hover\:text-gray-600:hover {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

.hover\:text-gray-900:hover {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring-4:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-blue-300:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(147 197 253 / var(--tw-ring-opacity));
}

.focus\:ring-gray-300:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(209 213 219 / var(--tw-ring-opacity));
}

.group:hover .group-hover\:rotate-45 {
  --tw-rotate: 45deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.group:hover .group-hover\:text-gray-900 {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

.group:hover .group-hover\:after\:content-\[\'__\#\'\]::after {
  --tw-content: '  #';
  content: var(--tw-content);
}

.aria-selected\:border-blue-600[aria-selected="true"] {
  --tw-border-opacity: 1;
  border-color: rgb(37 99 235 / var(--tw-border-opacity));
}

.aria-selected\:text-blue-600[aria-selected="true"] {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity));
}

.aria-selected\:hover\:text-blue-600:hover[aria-selected="true"] {
  --tw-text-opacity: 1;
  color: rgb(37 99 235 / var(--tw-text-opacity));
}

.format-figure\:flex :is(:where(figure):not(:where([class~="not-format"] *))) {
  display: flex;
}

.format-figure\:flex-col :is(:where(figure):not(:where([class~="not-format"] *))) {
  flex-direction: column;
}

.format-figure\:items-center :is(:where(figure):not(:where([class~="not-format"] *))) {
  align-items: center;
}

.format-img\:cursor-zoom-in :is(:where(img):not(:where([class~="not-format"] *))) {
  cursor: zoom-in;
}

@media (min-width: 640px) {

  .sm\:justify-center {
    justify-content: center;
  }
}

@media (min-width: 768px) {

  .md\:end-20 {
    inset-inline-end: 5rem;
  }

  .md\:order-1 {
    order: 1;
  }

  .md\:order-2 {
    order: 2;
  }

  .md\:mx-0 {
    margin-left: 0px;
    margin-right: 0px;
  }

  .md\:mx-3 {
    margin-left: 0.75rem;
    margin-right: 0.75rem;
  }

  .md\:mx-auto {
    margin-left: auto;
    margin-right: auto;
  }

  .md\:mt-0 {
    margin-top: 0px;
  }

  .md\:mt-1 {
    margin-top: 0.25rem;
  }

  .md\:mt-38 {
    margin-top: 9.5rem;
  }

  .md\:mt-\[151px\] {
    margin-top: 151px;
  }

  .md\:block {
    display: block;
  }

  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-120 {
    height: 30rem;
  }

  .md\:h-38 {
    height: 9.5rem;
  }

  .md\:h-80 {
    height: 20rem;
  }

  .md\:max-h-full {
    max-height: 100%;
  }

  .md\:w-1\/3 {
    width: 33.333333%;
  }

  .md\:w-1\/6 {
    width: 16.666667%;
  }

  .md\:w-10\/12 {
    width: 83.333333%;
  }

  .md\:w-2\/3 {
    width: 66.666667%;
  }

  .md\:w-5\/6 {
    width: 83.333333%;
  }

  .md\:w-80 {
    width: 20rem;
  }

  .md\:w-auto {
    width: auto;
  }

  .md\:max-w-5xl {
    max-width: 64rem;
  }

  .md\:max-w-screen-md {
    max-width: 768px;
  }

  .md\:grow {
    flex-grow: 1;
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:flex-col {
    flex-direction: column;
  }

  .md\:items-center {
    align-items: center;
  }

  .md\:justify-center {
    justify-content: center;
  }

  .md\:space-x-8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .md\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .md\:space-y-4 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem * var(--tw-space-y-reverse));
  }

  .md\:rounded-none {
    border-radius: 0px;
  }

  .md\:border {
    border-width: 1px;
  }

  .md\:border-0 {
    border-width: 0px;
  }

  .md\:border-r {
    border-right-width: 1px;
  }

  .md\:border-none {
    border-style: none;
  }

  .md\:border-gray-200 {
    --tw-border-opacity: 1;
    border-color: rgb(229 231 235 / var(--tw-border-opacity));
  }

  .md\:p-0 {
    padding: 0px;
  }

  .md\:p-2 {
    padding: 0.5rem;
  }

  .md\:p-5 {
    padding: 1.25rem;
  }

  .md\:px-0 {
    padding-left: 0px;
    padding-right: 0px;
  }

  .md\:px-12 {
    padding-left: 3rem;
    padding-right: 3rem;
  }

  .md\:px-2 {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  .md\:px-3 {
    padding-left: 0.75rem;
    padding-right: 0.75rem;
  }

  .md\:py-8 {
    padding-top: 2rem;
    padding-bottom: 2rem;
  }

  .md\:pl-3 {
    padding-left: 0.75rem;
  }

  .md\:text-5xl {
    font-size: 3rem;
    line-height: 1;
  }

  .md\:text-8xl {
    font-size: 6rem;
    line-height: 1;
  }

  .md\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .md\:shadow-none {
    --tw-shadow: 0 0 #0000;
    --tw-shadow-colored: 0 0 #0000;
    box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  }

  .md\:hover\:scale-110:hover {
    --tw-scale-x: 1.1;
    --tw-scale-y: 1.1;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:hover\:bg-transparent:hover {
    background-color: transparent;
  }

  .md\:hover\:text-blue-700:hover {
    --tw-text-opacity: 1;
    color: rgb(29 78 216 / var(--tw-text-opacity));
  }

  .md\:hover\:brightness-75:hover {
    --tw-brightness: brightness(.75);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }

  .md\:hover\:transition-transform:hover {
    transition-property: transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

  .md\:hover\:duration-700:hover {
    transition-duration: 700ms;
  }
}

@media (min-width: 1024px) {

  .lg\:mx-10 {
    margin-left: 2.5rem;
    margin-right: 2.5rem;
  }

  .lg\:line-clamp-\[10\] {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 10;
  }

  .lg\:block {
    display: block;
  }

  .lg\:flex {
    display: flex;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:h-full {
    height: 100%;
  }

  .lg\:w-1\/2 {
    width: 50%;
  }

  .lg\:w-28 {
    width: 7rem;
  }

  .lg\:w-96 {
    width: 24rem;
  }

  .lg\:max-w-2xl {
    max-width: 42rem;
  }

  .lg\:max-w-5xl {
    max-width: 64rem;
  }

  .lg\:flex-row {
    flex-direction: row;
  }

  .lg\:items-start {
    align-items: flex-start;
  }

  .lg\:items-end {
    align-items: flex-end;
  }

  .lg\:justify-between {
    justify-content: space-between;
  }

  .lg\:gap-12 {
    gap: 3rem;
  }

  .lg\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .lg\:p-9 {
    padding: 2.25rem;
  }

  .lg\:px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }

  .lg\:px-2 {
    padding-left: 0.5rem;
    padding-right: 0.5rem;
  }

  .lg\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .lg\:pl-0 {
    padding-left: 0px;
  }

  .lg\:text-right {
    text-align: right;
  }

  .lg\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }

  .lg\:text-6xl {
    font-size: 3.75rem;
    line-height: 1;
  }

  .lg\:text-9xl {
    font-size: 8rem;
    line-height: 1;
  }

  .lg\:before\:left-\[8\.5rem\]::before {
    content: var(--tw-content);
    left: 8.5rem;
  }

  .lg\:after\:left-\[8\.5rem\]::after {
    content: var(--tw-content);
    left: 8.5rem;
  }
}

@media (min-width: 1280px) {

  .xl\:px-0 {
    padding-left: 0px;
    padding-right: 0px;
  }
}

@media (min-width: 1536px) {

  .\32xl\:space-x-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(0px * var(--tw-space-x-reverse));
    margin-left: calc(0px * calc(1 - var(--tw-space-x-reverse)));
  }
}

:is(:where([dir="rtl"]) .rtl\:space-x-reverse) > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

:is(:where(.dark) .dark\:divide-gray-600) > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-divide-opacity));
}

:is(:where(.dark) .dark\:border-gray-500) {
  --tw-border-opacity: 1;
  border-color: rgb(107 114 128 / var(--tw-border-opacity));
}

:is(:where(.dark) .dark\:border-gray-600) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}

:is(:where(.dark) .dark\:border-gray-700) {
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity));
}

:is(:where(.dark) .dark\:border-transparent) {
  border-color: transparent;
}

:is(:where(.dark) .dark\:bg-blue-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:bg-blue-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 58 138 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:bg-gray-700) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:bg-gray-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:bg-gray-800\/50) {
  background-color: rgb(31 41 55 / 0.5);
}

:is(:where(.dark) .dark\:bg-gray-800\/70) {
  background-color: rgb(31 41 55 / 0.7);
}

:is(:where(.dark) .dark\:bg-gray-800\/90) {
  background-color: rgb(31 41 55 / 0.9);
}

:is(:where(.dark) .dark\:bg-gray-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:bg-gray-900\/80) {
  background-color: rgb(17 24 39 / 0.8);
}

:is(:where(.dark) .dark\:bg-gray-900\/85) {
  background-color: rgb(17 24 39 / 0.85);
}

:is(:where(.dark) .dark\:text-blue-300) {
  --tw-text-opacity: 1;
  color: rgb(147 197 253 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:text-gray-100) {
  --tw-text-opacity: 1;
  color: rgb(243 244 246 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:text-gray-200) {
  --tw-text-opacity: 1;
  color: rgb(229 231 235 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:text-gray-300) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:text-gray-50) {
  --tw-text-opacity: 1;
  color: rgb(249 250 251 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:text-neutral-300) {
  --tw-text-opacity: 1;
  color: rgb(212 212 212 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:hover\:bg-blue-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:hover\:bg-gray-600:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:hover\:bg-gray-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:hover\:bg-gray-800:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

:is(:where(.dark) .dark\:hover\:text-blue-500:hover) {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:hover\:text-gray-300:hover) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:hover\:text-white:hover) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:focus\:text-white:focus) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

:is(:where(.dark) .dark\:focus\:ring-blue-800:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(30 64 175 / var(--tw-ring-opacity));
}

:is(:where(.dark) .dark\:focus\:ring-gray-400:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(156 163 175 / var(--tw-ring-opacity));
}

:is(:where(.dark) .group:hover .dark\:group-hover\:text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

:is(:where(.dark) .aria-selected\:dark\:border-blue-500)[aria-selected="true"] {
  --tw-border-opacity: 1;
  border-color: rgb(59 130 246 / var(--tw-border-opacity));
}

:is(:where(.dark) .aria-selected\:dark\:text-blue-500)[aria-selected="true"] {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

:is(:where(.dark) .aria-selected\:dark\:hover\:text-blue-500:hover)[aria-selected="true"] {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

@media (min-width: 768px) {

  :is(:where(.dark) .md\:dark\:border-gray-700) {
    --tw-border-opacity: 1;
    border-color: rgb(55 65 81 / var(--tw-border-opacity));
  }

  :is(:where(.dark) .md\:dark\:bg-gray-900) {
    --tw-bg-opacity: 1;
    background-color: rgb(17 24 39 / var(--tw-bg-opacity));
  }

  :is(:where(.dark) .md\:dark\:bg-transparent) {
    background-color: transparent;
  }

  :is(:where(.dark) .md\:dark\:hover\:bg-transparent:hover) {
    background-color: transparent;
  }

  :is(:where(.dark) .md\:dark\:hover\:text-blue-500:hover) {
    --tw-text-opacity: 1;
    color: rgb(59 130 246 / var(--tw-text-opacity));
  }
}
